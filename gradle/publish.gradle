apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

artifactory {
    contextUrl = 'http://localhost:8081/artifactory'
    publish {
        repository {
            repoKey = 'libs-release-local'
            username = 'admin'
            password = 'password'
        }
    }
}

ext.excluded = ['secret.txt']

task apiJar(type: Jar) {
    from sourceSets.main.output
    exclude excluded
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.getAllSource()
    exclude excluded
}

task docsJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    exclude excluded
}
docsJar.dependsOn(javadoc)

pluginManager.withPlugin('scala') {
    javadoc {
        enabled = false
    }
    docsJar {
        from scaladoc.destinationDir
    }
    docsJar.dependsOn(scaladoc)
}

// There's no way to exclude files with `from components.java`, therefore the use of `artifact apiJar`.
// On the other hand, `artifact apiJar` doesn't generate an appropriate POM, so this configuration makes sure to copy
// the POM from an internal publication that uses `from components.java`.
// see https://stackoverflow.com/a/53486063/114626
publishing {
    publications {
        def pomString = null

        internal(MavenPublication) {
            from components.java
            pom.withXml {
                pomString = asString().toString()
            }
        }

        api(MavenPublication) {
            artifact apiJar
            artifact sourcesJar
            artifact docsJar
            pom.withXml {
                def builder = asString()
                builder.delete(0, builder.length())
                builder.append(pomString)
            }
        }
    }
}
generatePomFileForApiPublication.dependsOn(generatePomFileForInternalPublication)

artifactoryPublish {
    publications('api')
}


